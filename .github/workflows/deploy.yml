name: release

on:
  push:
    branches:
      next
  pull_request:
    branches:
      next


jobs:
  install:
    name: Install dependencies and cache modeles
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Cypress binary
        id: cache-cypress-binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: install
        if: |
          steps.cache-node-modules.outputs.cache-hit != 'true' ||
          steps.cache-cypress-binary.outputs.cache-hit != 'true'
        run: yarn install

      - name: install lerna
        if: |
          steps.cache-node-modules.outputs.cache-hit != 'true' ||
          steps.cache-cypress-binary.outputs.cache-hit != 'true'
        run: yarn bootstrap


  cypress-run:
    name: Cypress run
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - name: Load node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Check binary
        run: |
          npx cypress cache path
          npx cypress cache list

      - name: Start local dev and Cypress tests
        run: yarn dev & yarn test:run


  build:
    name: Yarn build
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Load node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: lint
        run: yarn lint

      - name: build
        run: yarn build

      - name: release to github page
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          GITHUB_REPO: github.com/hq001/hq001.github.io.git
        run: ./script/deploy.sh
